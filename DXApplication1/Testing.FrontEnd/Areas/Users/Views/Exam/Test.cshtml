@using Testing.Models
@model Testing.Models.UserExamQuestion
@{
    ViewData["Title"] = "Test";
}


<div class="row">

    <div class="col">
        <br />
        <div class="text-secondary p-1">
            <h4>Exam Name :&nbsp;&nbsp;@Model.UserExam.Exam.ExamName</h4>
        </div>

        @(Html.DevExtreme().DataGrid<Testing.Models.UserExamQuestion>()
            .ID("gridContainer")
                .DataSource(d => d.Mvc()
                .Controller("Exam")
                .LoadAction("GetExamQuestion")

                .Area("Users")

                .Key("QuestionId")

                .LoadParams(new { id = Model.UserExam.ExamId })

                )


            .FilterRow(filterRow => filterRow.Visible(true).ApplyFilter(GridApplyFilterMode.Auto))
            .SearchPanel(searchPanel => searchPanel.Visible(true).Width(240).Placeholder("Search..."))

            .Paging(paging => paging.Enabled(true).PageSize(10))

            .ShowBorders(true)
            .HeaderFilter(headerFilter => headerFilter.Visible(true))
            .Selection(s => s.Mode(SelectionMode.Single))
            .HoverStateEnabled(true)

            .Editing(editing =>
                   {
                       editing.Mode(GridEditMode.Form).UseIcons(true);
                       editing.AllowUpdating(true);
                   })

            .Columns(columns =>
            {
                columns.AddFor(m => m.Question.QuestionString).Caption("Questions")
                .CellTemplate(@<text>
                            <a href="/Users/Exam/QuestionAnswer/<%= data.QuestionExamId %>"><%= data.Question.QuestionString %></a>
                </text>
);
;

columns.AddFor(m => m.Question.Point).Visible(true).Caption("Point");

columns.AddFor(m => m.Question.QuestionLevel).Visible(true).Caption("Question Level")
.Lookup(lookup => lookup
.DataSource(Html.GetEnumSelectList<QuestionLevel>()
.Select(l => new { Value = int.Parse(l.Value), Text = l.Text }))
.ValueExpr("Value")
.DisplayExpr("Text"));

})

.Selection(s => s.Mode(SelectionMode.Multiple))
.OnSelectionChanged("selection_changed")
        )
    </div>
</div>

<form asp-action="Detail" asp-route-id="@Model.UserExam.ExamId">

    <input type="hidden" name="examQuestion" id="examQuestion">
    <br />

    <input type="submit" class="btn btn-success" value="SUBMIT" />

    <script>

        function selection_changed(selectedItems) {
            var data = selectedItems.selectedRowsData;
            document.getElementById("examQuestion").value = JSON.stringify(data);
        }

    </script>

</form>


