<div class="row">
    <div class="col-sm">

        @using Testing.Models

        @(Html.DevExtreme()
            .DataGrid<Testing.Models.QuestionExam>()
                .DataSource(d => d.Mvc()
                .Controller("Questions")
                .LoadAction("GetExam")
                .DeleteAction("DeleteExam")
                .Area("Admin")
                .Key("QuestionId")

                .LoadParams(new { id = Model.ExamId })

                )

           .ID("gridContainer")

           .Editing(editing =>
           {
               editing.Mode(GridEditMode.Cell);
               editing.AllowDeleting(true).UseIcons(true);
           })

           .FilterRow(filterRow => filterRow.Visible(true).ApplyFilter(GridApplyFilterMode.Auto))
           .SearchPanel(searchPanel => searchPanel.Visible(true).Width(240).Placeholder("Search..."))

           .Paging(paging => paging.Enabled(true).PageSize(10))

           .ShowBorders(true)
           .HeaderFilter(headerFilter => headerFilter.Visible(true))
           .Selection(s => s.Mode(SelectionMode.Single))
           .HoverStateEnabled(true)


           .Columns(columns =>
           {
               columns.AddFor(m => m.QuestionId).Caption("Questions")
               .Lookup(lookup => lookup
               .DataSource(d => d.Mvc().Controller("Questions").LoadAction("Get").Key("QuestionId"))
               .DisplayExpr("QuestionString")
               .ValueExpr("QuestionId"))
               ;

               columns.AddFor(m => m.QuestionId).Visible(true).Caption("Points")
               .Lookup(lookup => lookup
               .DataSource(d => d.Mvc().Controller("Questions").LoadAction("Get").Key("QuestionId"))
               .DisplayExpr("Point")
               .ValueExpr("QuestionId"))
               ;

               columns.AddFor(m => m.QuestionId).Visible(true).Caption("Topic Name")
               .Lookup(lookup => lookup
               .DataSource(d => d.Mvc().Controller("Questions").LoadAction("Get").Key("QuestionId"))
               .DisplayExpr("TopicId")
               .ValueExpr("QuestionId"))
               ;

               columns.AddFor(m => m.QuestionId).Visible(true).Caption("Question Type")
               .Lookup(lookup => lookup
               .DataSource(d => d.Mvc().Controller("Questions").LoadAction("Get").Key("QuestionId"))
               .DisplayExpr("QuestionType")
               .ValueExpr("QuestionId"))
               ;

               columns.AddFor(m => m.QuestionId).Visible(true).Caption("Question Level")
               .Lookup(lookup => lookup
               .DataSource(d => d.Mvc().Controller("Questions").LoadAction("Get").Key("QuestionId"))
               .DisplayExpr("QuestionLevel")
               .ValueExpr("QuestionId"))
               ;


           }

)
.OnCellDblClick("selection_changed")

        )

        <script>
            function selection_changed(e) {
                if (e.data.QuestionId != null) {
                    window.location.href = "/Admin/Question/Index/" + e.data.QuestionId;
                }
            }

        </script>

    </div>
   
</div>

