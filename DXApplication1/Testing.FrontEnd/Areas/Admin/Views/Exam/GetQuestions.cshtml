<br />
<h4 class="text-info">Assign Question to Exam</h4>
@using Testing.Models
@model Testing.Models.Exam

<form method="post">
    <br /><br />

    @(Html.DevExtreme().Button()
     .ID("grid-clear-selection")
     .Text("Clear Selection")
     .Disabled(true)
     .OnClick("button_click")
    )
    @(Html.DevExtreme().DataGrid<Testing.Models.Question>().DataSource(d => d.Mvc()
                        .Controller("Questions")
                        .LoadAction("Get")
                        .Key("QuestionId")

                        )

                     .ID("grid-container")

                    .FilterRow(filterRow => filterRow
                        .Visible(true)
                        .ApplyFilter(GridApplyFilterMode.Auto)
                        )

                    .SearchPanel(searchPanel => searchPanel
                            .Visible(true)
                            .Width(240)
                            .Placeholder("Search...")
                        )

                    .ShowBorders(true)
                        .HeaderFilter(headerFilter => headerFilter.Visible(true))

    .Selection(s => s.Mode(SelectionMode.Multiple))
    .Columns(columns =>
        {

    columns.AddFor(m => m.QuestionString).Caption("Question");


    columns.AddFor(m => m.QuestionType).Caption("Question Type")
    .Lookup(lookup => lookup
    .DataSource(Html.GetEnumSelectList<QuestionType>()
    .Select(t => new { Value = int.Parse(t.Value), Text = t.Text }))
    .ValueExpr("Value")
    .DisplayExpr("Text"))
    .FormItem(i => i
    .Editor(e => e.SelectBox()
    .ID("QuestionType")
    .DataSource(Html.GetEnumSelectList<QuestionType>()
    .Select(t => new { Value = int.Parse(t.Value), Text = t.Text }))
    .ValueExpr("Value")
    .DisplayExpr("Text"))
    );

    columns.AddFor(m => m.QuestionLevel).Caption("Question Level")
    .Lookup(lookup => lookup
    .DataSource(Html.GetEnumSelectList<QuestionLevel>()
    .Select(l => new { Value = int.Parse(l.Value), Text = l.Text }))
    .ValueExpr("Value")
    .DisplayExpr("Text"))
    .FormItem(i => i
    .Editor(e => e.SelectBox()
    .ID("QuestionLevel")
    .DataSource(Html.GetEnumSelectList<QuestionLevel>()

    .Select(l => new { Value = int.Parse(l.Value), Text = l.Text }))
    .ValueExpr("Value")
    .DisplayExpr("Text"))
    );

    columns.AddFor(m => m.TopicId).Caption("Topic Name")
    .Lookup(lookup => lookup
    .DataSource(d => d.Mvc().Controller("Questions").LoadAction("GetTopic").Key("TopicId"))
    .DisplayExpr("TopicName")
    .ValueExpr("TopicId"))

    .FormItem(i => i
    .Editor(e => e.Lookup()
    .DataSource(d => d.Mvc().Controller("Questions").LoadAction("GetTopic").Key("TopicId"))
    .DisplayExpr("TopicName")
    .ValueExpr("TopicId"))
    );

    })

       .OnSelectionChanged("selection_changed")

    )

    <br /><br />

    @(Html.DevExtreme().Button()
      .Text("Back")
      .Type(ButtonType.Normal)
      .StylingMode(ButtonStylingMode.Outlined)
      .OnClick("BacktoIndex")
    )

    @(Html.DevExtreme().Button()
      .Text("Add")
      .Type(ButtonType.Success)
      .StylingMode(ButtonStylingMode.Contained)
      .UseSubmitBehavior(true)
    )

    <br /><br />

    <div class="selected-data">
        <span class="caption">Selected Questions:</span>
        <span id="selectedItemsContainer"> No Question has been selected </span>
    </div>


    <script>

        var changedBySelectBox;
        //back to index
        function BacktoIndex() {
            window.location.href = "/Admin/Exams/Index";
        }

       
        function getDataGridInstance() {
            return $("#grid-container").dxDataGrid("instance");
        }

        function selection_changed(selectedItems) {
            var data = selectedItems.selectedRowsData;
            alert(JSON.stringify(data));
            if (data.length > 0)
                $("#selectedItemsContainer").text(
                    $.map(data, function (value) {
                        return value.QuestionString;
                    }).join(", "));
            else
                $("#selectedItemsContainer").text("No Question has been selected");


            changedBySelectBox = false;
            $("#grid-clear-selection").dxButton("instance").option("disabled", !data.length);
        }

        function button_click() {
            getDataGridInstance().clearSelection();
        }

    </script>

</form>







































