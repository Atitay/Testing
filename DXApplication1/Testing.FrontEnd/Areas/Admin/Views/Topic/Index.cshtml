@using Testing.Models
@model Testing.Models.Topic

<div class="row">
    <div class="col-1"></div>
    <div class="col-sm pb-4">
        <br />

        @(Html.DevExtreme().Form<Testing.Models.Topic>()
        .ShowValidationSummary(true)
        .ID("form")
        .ShowColonAfterLabel(true)
        .ColCount(1)
        .LabelLocation(FormLabelLocation.Left)

        .FormData(Model)


                       .Items(groupItems =>
                       {
                           groupItems.AddGroup()
                           .Caption("Topic Infomation").CssClass("text-secondary font-weight-bold ")

                           .Template(@<text>

                                    <div class="h6 font-weight-normal">
                                                                   <b>Topic Name :</b> @Model.TopicName
                                    </div>

                                    <div class="h6 font-weight-normal">
                                        @if (Model.Parent != null)
                                                {<p><b>Parent Name :</b> @Model.Parent.TopicName</p>}
                                                    else
                                                    {
                                                <p><b>Parent Name :</b> No Parent </p>
                                                    }
                                    </div>

                                    <div class="h6 font-weight-normal">

                                        <b>List Childs :</b> <span class="badge badge-danger badge-pill">@Model.Childs.Count</span>

                                        <br />
                                        @foreach (var eq in Model.Childs)
                                                {
                                    <span>&minus; @eq.TopicName </span><br />
                                                }
                                    </div>
                        </text>);

groupItems.AddButton()
.HorizontalAlignment(HorizontalAlignment.Left)
.ButtonOptions(b => b.Text("Back")
.Type(ButtonType.Back)
.StylingMode(ButtonStylingMode.Contained)
.OnClick("BacktoIndex")
);

})
        )


    </div>

    <div class="col-1"></div>
        <div class="col-sm-3 bg-light">
            <br />
            <div class="bg-white p-1 text-center h6"><span class="badge badge-danger badge-pill">@Model.Questions.Count</span>  List Questions!</div>
            <br />

            @foreach (var eq in Model.Questions)
            {
                <a asp-action="Index" asp-controller="Question" asp-route-id="@eq.QuestionId">
                    <span>&bull;&nbsp; @eq.QuestionString </span><br />
                </a>

            }
            <br />
            @if (Model.Questions.Count != 0)
            {
                  <div class="card-footer text-center">
                      <a asp-action="ListQuestions" asp-route-id="@Model.TopicId">
                          See More Questions!<br />
                      </a>
                  </div>
            }
        </div>

</div>

<script>
    function BacktoIndex() {
        window.location.href = "/Admin/Topics/Index";
    }
</script>
