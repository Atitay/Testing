@using Testing.Models
@model Testing.Models.Topic
<br />
<br />
<div>
    <form method="post">
        @(Html.DevExtreme().Form<Testing.Models.Topic>()
        .ShowValidationSummary(true)
        .ID("form")
        .ShowColonAfterLabel(true)
        .ColCount(2)
        .LabelLocation(FormLabelLocation.Left)

        .FormData(Model)

        .Items(items =>
        {
            items.AddGroup()
                       .Caption("Topic Information").CssClass("text-info")
                       .Items(groupItems =>
                       {
                           groupItems.AddSimpleFor(m => m.TopicName).Editor(e => e.TextBox());

                       });
            items.AddGroup()
                        .Caption("More Detail").CssClass("text-info")
                               .Items(GroupItems =>
                               {
                                   GroupItems.AddSimpleFor(m => m.ParentId)
                                                    .Editor(e => e.Lookup()
                            .DataSource(d => d.Mvc().Controller("Questions").LoadAction("GetTopic").Key("TopicId"))
                                .ValueExpr("TopicId")
                                .DisplayExpr("TopicName").Disabled(true));

                                   GroupItems.AddSimpleFor(m => m.Childs)
                                                        .Editor(e => e
                                                        .TextBox()
                                                        .Disabled(false));

                                   GroupItems.AddSimpleFor(m => m.Questions) .Editor(e => e
                                                        .TextBox()
                                                        .Disabled(false));
                               });

            items.AddButton()
            .HorizontalAlignment(HorizontalAlignment.Left)
            .ButtonOptions(b => b.Text("Back")
            .Type(ButtonType.Normal)
            .StylingMode(ButtonStylingMode.Outlined)
            .OnClick("BacktoIndex")
            );

            //items.AddButton()
            //.HorizontalAlignment(HorizontalAlignment.Right)
            //.ButtonOptions(b => b.Text("Update")
            //.Type(ButtonType.Success)
            //.StylingMode(ButtonStylingMode.Contained)
            //.UseSubmitBehavior(true)
            //);

        })
        )
       
        <script>
            function BacktoIndex() {
                window.location.href = "/Admin/Topics/Index";
            }
        </script>
    </form>
</div>