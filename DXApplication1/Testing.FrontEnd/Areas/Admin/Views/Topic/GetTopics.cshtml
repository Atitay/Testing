@using Testing.Models

@(Html.DevExtreme().TreeList<Testing.Models.Topic>().DataSource(d => d.Mvc()
        .Controller("Topic")
        .LoadAction("Get")
        .UpdateAction("Put")
        .InsertAction("Post")
        .DeleteAction("Delete")
        .Area("Admin")
        .Key("TopicId")

        )

     .KeyExpr("TopicId")
     .ParentIdExpr("ParentId")
     
     //.ShowRowLines(true)
     .WordWrapEnabled(true)
     .Editing(editing =>
     {
         editing.Mode(GridEditMode.Row);
         editing.AllowAdding(true);
         editing.AllowDeleting(true);
         editing.AllowUpdating(true);
     })

        .FilterRow(filterRow => filterRow
        .Visible(true)
        .ApplyFilter(GridApplyFilterMode.Auto)
    )

    .SearchPanel(searchPanel => searchPanel
        .Visible(true)
        .Width(240)
        .Placeholder("Search...")
    )

    .HeaderFilter(headerFilter => headerFilter.Visible(true))



    .Columns(columns =>
    {
        columns.AddFor(m => m.TopicName).Caption("Topic Name");
        columns.AddFor(m=>m.ParentId).Caption("Parent Name")

            .Lookup(lookup => lookup
            .DataSource(d => d.Mvc().Controller("Topic").LoadAction("Get").Key("TopicId"))
            .DisplayExpr("TopicName")
            .ValueExpr("TopicId"))

            .FormItem(i => i
            .Editor(e => e.SelectBox()
            .DataSource(d => d.Mvc().Controller("Topic").LoadAction("Get").Key("TopicId"))
            .DisplayExpr("TopicName")
            .ValueExpr("TopicId"))
            );

        
    })

    .ShowBorders(true)
    .OnInitNewRow("treeList_onInitNewRow")

)

<script>

    function treeList_onInitNewRow(e) {
        if (e.data.ParentId == "") {
           e.data.ParentId = null;
        }      
    }
</script>
