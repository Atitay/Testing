@using Testing.Models
@model Testing.Models.Question
<br />
<br />
@(Html.DevExtreme().Form<Testing.Models.Question>()
.ID("form")
.ShowColonAfterLabel(true)
.ColCount(2)
.LabelLocation(FormLabelLocation.Left)

.FormData(Model)

.Items(items =>
{
    items.AddGroup()
               .Caption("Question Information")
               .Items(groupItems =>
               {
                   groupItems.AddSimpleFor(m => m.QuestionString);
                   groupItems.AddSimpleFor(m => m.QuestionType)
   .Editor(e => e.SelectBox()
   .ID("QuestionType")
   .DataSource(Html.GetEnumSelectList<QuestionType>()
   .Select(t => new { Value = int.Parse(t.Value), Text = t.Text }))
   .ValueExpr("Value")
   .DisplayExpr("Text"))
   ;
                   groupItems.AddSimpleFor(m => m.QuestionLevel)
   .Editor(e => e.SelectBox()
   .ID("QuestionLevel")
   .DataSource(Html.GetEnumSelectList<QuestionLevel>()
   .Select(t => new { Value = int.Parse(t.Value), Text = t.Text }))
   .ValueExpr("Value")
   .DisplayExpr("Text"))
   ;
                   groupItems.AddSimpleFor(m => m.TopicId)
    .Editor(e => e.Lookup()
    .DataSource(d => d.Mvc().Controller("Question").LoadAction("GetTopic").Key("TopicId"))
    .DisplayExpr("TopicName")
    .ValueExpr("TopicId"))
   ;

                   groupItems.AddGroup()
                       .Caption("More Detail")
                       .Items(innerGroupItems =>
                       {
                           innerGroupItems.AddSimpleFor(m => m.Point)
.Editor(e => e.Slider().Max(100)
.Step(1)
.Tooltip(t => t.Enabled(true)));
                           innerGroupItems.AddSimpleFor(m => m.Hint)
   .Editor(e => e
   .TextBox()
   .Disabled(false));
                       });
               });
})
)
<script>
    function getFormInstance() {
        return $("#form").dxForm("instance");
    }
</script>

@(Html.DevExtreme().DataGrid<Testing.Models.Choice>()
    .ID("gridContainer")
    .ShowBorders(true)
    .Width(600)
    .Paging(paging => paging.Enabled(false))
    .Editing(editing =>
    {
        editing.Mode(GridEditMode.Row);
        editing.AllowAdding(true);
        editing.AllowDeleting(true);
        editing.AllowUpdating(true);
    })
    .Columns(columns =>
    {
        columns.AddFor(m => m.ChoiceString).Caption("Choices");
        
    })
    .DataSource(d => d.Mvc()
        .Controller("Choice")
        .LoadAction("Get")
        .UpdateAction("Put")
        .InsertAction("Post")
        .DeleteAction("Delete")
        .Key("QuestionId")
    )
)
